name: NEURON ModelDB CI

on:
  push:
    branches: [master]
  pull_request:
      branches: [master]
  schedule:
    # Run at 2am every day
    - cron:  '0 2 * * *'
  workflow_call:
   inputs:
      neuron_v1:
        description: Last official release (neuron) / NEURON pinned version / artifacts URL
        default: 'neuron'
        required: true
        type: string
      neuron_v2:
        description: Last nightly release (neuron-nightly) / NEURON pinned version / artifacts URL
        default: 'neuron-nightly'
        required: true
        type: string
      models_to_run:
        description: 'Empty for all models, space separated accession numbers for specific models'
        default: ''
        required: false
        type: string
      repo:
        default: 'neuronsimulator/nrn-modeldb-ci'
        type: string
        required: false
      platform:
        description: 'The platform/OS'
        default: 'ubuntu-latest'
        required: false
        type: string
      python_version:
        description: 'The Python version of the NEURON wheel'
        default: '3.9'
        required: false
        type: string
      groups1:
        description: 'The number of groups to split NEURON V1 models into'
        default: 1
        required: false
        type: string
      groups2:
        description: 'The number of groups to split NEURON V2 models into'
        default: 3
        required: false
        type: string

  workflow_dispatch:
    inputs:
      neuron_v1:
        description: Last official release (neuron) / NEURON pinned version / artifacts URL
        default: 'neuron'
        required: true
      neuron_v2:
        description: Last nightly release (neuron-nightly) / NEURON pinned version / artifacts URL
        default: 'neuron-nightly'
        required: true
      models_to_run:
        description: 'Empty for all models, space separated accession numbers for specific models'
        default: ''
        required: false
      platform:
        description: 'The platform/OS'
        default: 'ubuntu-latest'
        required: false
      python_version:
        description: 'The Python version of the NEURON wheel'
        default: '3.9'
        required: false

env:
  NEURON_V1: ${{ github.event.inputs.neuron_v1 || inputs.neuron_v1 || 'neuron' }}
  NEURON_V2: ${{ github.event.inputs.neuron_v2 || inputs.neuron_v2 || 'neuron-nightly' }}

jobs:
  set-models:
    name: Set models to run for PR
    runs-on: ubuntu-latest
    outputs:
      models_to_run: ${{ steps.set-models.outputs.models_to_run }}
      matrix1: ${{ steps.set-models.outputs.matrix1 }}
      matrix2: ${{ steps.set-models.outputs.matrix2 }}
    steps:
      - name: Set models to run for PR
        id: set-models
        if: github.event_name == 'pull_request' && inputs.repo == ''
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUM_GROUPS1: ${{ inputs.groups1 || 1 }}
          NUM_GROUPS2: ${{ inputs.groups2 || 3 }}
        run: |
          # For PRs we only have a few models for quick sanity checking.
          # Once the PR is green you need to manually run the ModelDB CI workflow by simply selecting your branch in the UI.

          # The follwing selection aims to target different features (since we haven't worked on unit testing yet -> #38 ).
          # Select a few models to run CI for PRs:
          #   64195   -> run: null
          #   22203   -> skip: true
          #   156120  -> several model directories
          #   97868   -> failed nrnivmodl
          #   146030  -> curate_patterns
          #   244679  -> no entry in modeldb-run.yaml
          #   rest:   -> currently yielding differences in the pipeline
          echo 'models_to_run=64195 22203 156120 51781 97868 22203 97756 97917 105507 136803 138379 138382 146030 244679 251881' >> $GITHUB_OUTPUT

          # parse PR description for models to run

          parse_models=$(gh pr view $PR_URL --json body -q '.body | capture("(MODELS_TO_RUN=)(?<models>\\d+( \\d+)*)")')
          if [ ! -z "$parse_models" ]; then
            echo "models_to_run=$(echo $parse_models | jq -r .models)" >> $GITHUB_OUTPUT
          fi

          matrix='{"include":['
          for ((i=1; i<=NUM_GROUPS1; i++)); do
            if [ $i -gt 1 ]; then
              matrix+=','
            fi
            matrix+="{\"group_id\":$i}"
          done
          matrix+=']}'

          echo "matrix1=$matrix" >> $GITHUB_OUTPUT

          matrix='{"include":['
          for ((i=1; i<=NUM_GROUPS2; i++)); do
            if [ $i -gt 1 ]; then
              matrix+=','
            fi
            matrix+="{\"group_id\":$i}"
          done
          matrix+=']}'

          echo "matrix2=$matrix" >> $GITHUB_OUTPUT

  modeldb-v1:
    name: Running with V1
    needs:
      - set-models
    strategy:
      matrix:
        include: ${{ fromJson(needs.set-models.outputs.matrix1) }}
    uses: ./.github/workflows/nrn-modeldb-ci-template.yaml
    with:
      neuron_version: ${{ github.event.inputs.neuron_v1 || inputs.neuron_v1 || 'neuron' }}
      models_to_run: ${{ github.event.inputs.models_to_run || inputs.models_to_run || needs.set-models.outputs.models_to_run || '' }}
      platform: ubuntu-latest
      python_version: '3.9'

  modeldb-v2:
    name: Running with V2
    needs:
      - set-models
    strategy:
      matrix:
        include: ${{ fromJson(needs.set-models.outputs.matrix2) }}
    uses: ./.github/workflows/nrn-modeldb-ci-template.yaml
    with:
      neuron_version: ${{ github.event.inputs.neuron_v2 || inputs.neuron_v2 || 'neuron-nightly' }}
      models_to_run: ${{ github.event.inputs.models_to_run || inputs.models_to_run || needs.set-models.outputs.models_to_run || '' }}
      platform: ubuntu-latest
      python_version: '3.9'

  nrn-modeldb-ci:
    needs:
      - modeldb-v1
      - modeldb-v2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo || github.repository }}

      - name: Setup Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies and project
        id: install-deps
        run: |
          set
          # Install python dependencies
          python -m pip install uv
          # Install project in editable mode
          python -m uv pip install -e .

      - name: Download artifacts for ${{ env.NEURON_V1 }}
        uses: actions/download-artifact@v4
        env:
          file: ${{ needs.modeldb-v1.outputs.json_file }}
        with:
          name: modeldb-${{ env.file }}-ubuntu-latest-3.9
          path: v1

      - name: Download artifacts for ${{ env.NEURON_V2 }}
        uses: actions/download-artifact@v4
        env:
          file: ${{ needs.modeldb-v2.outputs.json_file }}
        with:
          name: modeldb-${{ env.file }}-ubuntu-latest-3.9
          path: v2

      - name: diffreports2html
        if: env.NEURON_V1 != env.NEURON_V2
        env:
          file1: ${{ needs.modeldb-v1.outputs.json_file }}
          file2: ${{ needs.modeldb-v2.outputs.json_file }}
        run: |
          tree
          diffreports2html v1/${file1}.json v2/${file2}.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        env:
          file1: ${{ needs.modeldb-v1.outputs.json_file }}
          file2: ${{ needs.modeldb-v2.outputs.json_file }}
        with:
          name: modeldb-comparison
          path: |
            v1/*vs*.html
